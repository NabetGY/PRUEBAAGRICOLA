// <auto-generated />
using Api.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Domain.Fincas.Finca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("Hectareas")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("hectareas");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ubicacion");

                    b.HasKey("Id")
                        .HasName("pk_fincas");

                    b.ToTable("Fincas", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Grupos.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Lote")
                        .HasColumnType("int")
                        .HasColumnName("id_lote");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_grupos");

                    b.HasIndex("Id_Lote")
                        .HasDatabaseName("ix_grupos_id_lote");

                    b.ToTable("Grupos", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Lotes.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Arboles")
                        .HasColumnType("int")
                        .HasColumnName("arboles");

                    b.Property<string>("Etapa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("etapa");

                    b.Property<int>("Id_Finca")
                        .HasColumnType("int")
                        .HasColumnName("id_finca");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("pk_lotes");

                    b.HasIndex("Id_Finca")
                        .HasDatabaseName("ix_lotes_id_finca");

                    b.ToTable("Lotes", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Grupos.Grupo", b =>
                {
                    b.HasOne("Api.Domain.Lotes.Lote", null)
                        .WithMany()
                        .HasForeignKey("Id_Lote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_grupos_lote_id_lote");
                });

            modelBuilder.Entity("Api.Domain.Lotes.Lote", b =>
                {
                    b.HasOne("Api.Domain.Fincas.Finca", null)
                        .WithMany()
                        .HasForeignKey("Id_Finca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_lotes_fincas_id_finca");
                });
#pragma warning restore 612, 618
        }
    }
}
